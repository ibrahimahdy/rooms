// Generated by Dagger (https://dagger.dev).
package com.ut.iot.rooms.repo.auth;

import com.ut.iot.rooms.api.service.AuthService;
import com.ut.iot.rooms.db.dao.BookingDao;
import com.ut.iot.rooms.db.dao.HotelDao;
import com.ut.iot.rooms.db.dao.ImageDao;
import com.ut.iot.rooms.db.dao.RoomDao;
import com.ut.iot.rooms.db.dao.RoomTypeDao;
import com.ut.iot.rooms.db.dao.UserDao;
import com.ut.iot.rooms.state.StateManager;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class AuthRepo_Factory implements Factory<AuthRepo> {
  private final Provider<UserDao> userDaoProvider;

  private final Provider<BookingDao> bookingDaoProvider;

  private final Provider<RoomDao> roomDaoProvider;

  private final Provider<RoomTypeDao> roomTypeDaoProvider;

  private final Provider<ImageDao> imageDaoProvider;

  private final Provider<HotelDao> hotelDaoProvider;

  private final Provider<AuthService> authServiceProvider;

  private final Provider<StateManager> stateManagerProvider;

  public AuthRepo_Factory(Provider<UserDao> userDaoProvider,
      Provider<BookingDao> bookingDaoProvider, Provider<RoomDao> roomDaoProvider,
      Provider<RoomTypeDao> roomTypeDaoProvider, Provider<ImageDao> imageDaoProvider,
      Provider<HotelDao> hotelDaoProvider, Provider<AuthService> authServiceProvider,
      Provider<StateManager> stateManagerProvider) {
    this.userDaoProvider = userDaoProvider;
    this.bookingDaoProvider = bookingDaoProvider;
    this.roomDaoProvider = roomDaoProvider;
    this.roomTypeDaoProvider = roomTypeDaoProvider;
    this.imageDaoProvider = imageDaoProvider;
    this.hotelDaoProvider = hotelDaoProvider;
    this.authServiceProvider = authServiceProvider;
    this.stateManagerProvider = stateManagerProvider;
  }

  @Override
  public AuthRepo get() {
    return new AuthRepo(userDaoProvider.get(), bookingDaoProvider.get(), roomDaoProvider.get(), roomTypeDaoProvider.get(), imageDaoProvider.get(), hotelDaoProvider.get(), authServiceProvider.get(), stateManagerProvider.get());
  }

  public static AuthRepo_Factory create(Provider<UserDao> userDaoProvider,
      Provider<BookingDao> bookingDaoProvider, Provider<RoomDao> roomDaoProvider,
      Provider<RoomTypeDao> roomTypeDaoProvider, Provider<ImageDao> imageDaoProvider,
      Provider<HotelDao> hotelDaoProvider, Provider<AuthService> authServiceProvider,
      Provider<StateManager> stateManagerProvider) {
    return new AuthRepo_Factory(userDaoProvider, bookingDaoProvider, roomDaoProvider, roomTypeDaoProvider, imageDaoProvider, hotelDaoProvider, authServiceProvider, stateManagerProvider);
  }

  public static AuthRepo newInstance(UserDao userDao, BookingDao bookingDao, RoomDao roomDao,
      RoomTypeDao roomTypeDao, ImageDao imageDao, HotelDao hotelDao, AuthService authService,
      StateManager stateManager) {
    return new AuthRepo(userDao, bookingDao, roomDao, roomTypeDao, imageDao, hotelDao, authService, stateManager);
  }
}
