// Generated by Dagger (https://dagger.dev).
package com.ut.iot.rooms.repo.booking;

import com.ut.iot.rooms.api.service.BookingService;
import com.ut.iot.rooms.db.dao.BookingDao;
import com.ut.iot.rooms.db.dao.ImageDao;
import com.ut.iot.rooms.db.dao.RoomDao;
import com.ut.iot.rooms.db.dao.RoomTypeDao;
import com.ut.iot.rooms.state.StateManager;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class BookingRepo_Factory implements Factory<BookingRepo> {
  private final Provider<BookingDao> bookingDaoProvider;

  private final Provider<RoomDao> roomDaoProvider;

  private final Provider<RoomTypeDao> roomTypeDaoProvider;

  private final Provider<ImageDao> imageDaoProvider;

  private final Provider<StateManager> stateManagerProvider;

  private final Provider<BookingService> bookingServiceProvider;

  public BookingRepo_Factory(Provider<BookingDao> bookingDaoProvider,
      Provider<RoomDao> roomDaoProvider, Provider<RoomTypeDao> roomTypeDaoProvider,
      Provider<ImageDao> imageDaoProvider, Provider<StateManager> stateManagerProvider,
      Provider<BookingService> bookingServiceProvider) {
    this.bookingDaoProvider = bookingDaoProvider;
    this.roomDaoProvider = roomDaoProvider;
    this.roomTypeDaoProvider = roomTypeDaoProvider;
    this.imageDaoProvider = imageDaoProvider;
    this.stateManagerProvider = stateManagerProvider;
    this.bookingServiceProvider = bookingServiceProvider;
  }

  @Override
  public BookingRepo get() {
    return new BookingRepo(bookingDaoProvider.get(), roomDaoProvider.get(), roomTypeDaoProvider.get(), imageDaoProvider.get(), stateManagerProvider.get(), bookingServiceProvider.get());
  }

  public static BookingRepo_Factory create(Provider<BookingDao> bookingDaoProvider,
      Provider<RoomDao> roomDaoProvider, Provider<RoomTypeDao> roomTypeDaoProvider,
      Provider<ImageDao> imageDaoProvider, Provider<StateManager> stateManagerProvider,
      Provider<BookingService> bookingServiceProvider) {
    return new BookingRepo_Factory(bookingDaoProvider, roomDaoProvider, roomTypeDaoProvider, imageDaoProvider, stateManagerProvider, bookingServiceProvider);
  }

  public static BookingRepo newInstance(BookingDao bookingDao, RoomDao roomDao,
      RoomTypeDao roomTypeDao, ImageDao imageDao, StateManager stateManager,
      BookingService bookingService) {
    return new BookingRepo(bookingDao, roomDao, roomTypeDao, imageDao, stateManager, bookingService);
  }
}
