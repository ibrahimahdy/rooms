// Generated by Dagger (https://dagger.dev).
package com.ut.iot.rooms.di.modules;

import com.ut.iot.rooms.Rooms;
import com.ut.iot.rooms.db.RoomsDB;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class PersistenceModule_DatabaseProviderFactory implements Factory<RoomsDB> {
  private final PersistenceModule module;

  private final Provider<Rooms> roomsProvider;

  public PersistenceModule_DatabaseProviderFactory(PersistenceModule module,
      Provider<Rooms> roomsProvider) {
    this.module = module;
    this.roomsProvider = roomsProvider;
  }

  @Override
  public RoomsDB get() {
    return databaseProvider(module, roomsProvider.get());
  }

  public static PersistenceModule_DatabaseProviderFactory create(PersistenceModule module,
      Provider<Rooms> roomsProvider) {
    return new PersistenceModule_DatabaseProviderFactory(module, roomsProvider);
  }

  public static RoomsDB databaseProvider(PersistenceModule instance, Rooms rooms) {
    return Preconditions.checkNotNull(instance.databaseProvider(rooms), "Cannot return null from a non-@Nullable @Provides method");
  }
}
