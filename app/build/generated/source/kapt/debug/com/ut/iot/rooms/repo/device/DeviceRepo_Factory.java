// Generated by Dagger (https://dagger.dev).
package com.ut.iot.rooms.repo.device;

import com.ut.iot.rooms.api.service.DeviceService;
import com.ut.iot.rooms.state.StateManager;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DeviceRepo_Factory implements Factory<DeviceRepo> {
  private final Provider<StateManager> stateManagerProvider;

  private final Provider<DeviceService> deviceServiceProvider;

  public DeviceRepo_Factory(Provider<StateManager> stateManagerProvider,
      Provider<DeviceService> deviceServiceProvider) {
    this.stateManagerProvider = stateManagerProvider;
    this.deviceServiceProvider = deviceServiceProvider;
  }

  @Override
  public DeviceRepo get() {
    return new DeviceRepo(stateManagerProvider.get(), deviceServiceProvider.get());
  }

  public static DeviceRepo_Factory create(Provider<StateManager> stateManagerProvider,
      Provider<DeviceService> deviceServiceProvider) {
    return new DeviceRepo_Factory(stateManagerProvider, deviceServiceProvider);
  }

  public static DeviceRepo newInstance(StateManager stateManager, DeviceService deviceService) {
    return new DeviceRepo(stateManager, deviceService);
  }
}
